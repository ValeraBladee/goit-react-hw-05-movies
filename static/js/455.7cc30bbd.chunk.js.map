{"version":3,"file":"static/js/455.7cc30bbd.chunk.js","mappings":"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","sources":["cat-api.js","page/MovieDetails/MovieDetails.styled.jsx","page/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'd88417173bd74f0afa4871cb3367af96';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  margin-top: 20px;\n  margin-left: 10px;\n`;\n\nexport const TextInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n`;\n\nexport const Overview = styled.p`\n  width: 500px;\n`;\n\nexport const Title = styled.h2`\n  margin-left: 10px;\n`;\n\nexport const ListInfo = styled.li`\n  margin-top: 10px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: inline-block;\n  margin-top: 70px;\n  margin-left: 10px;\n`;\n","import { Suspense, useRef, useEffect, useState } from 'react';\nimport { TailSpin } from 'react-loader-spinner';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from 'cat-api';\nimport {\n  Container,\n  TextInfo,\n  Overview,\n  StyledLink,\n  ListInfo,\n  Title,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movies, setMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchQuery = async () => {\n      setLoading(true);\n      try {\n        const data = await fetchMovieDetails(movieId);\n        setMovies(data);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchQuery();\n  }, [movieId]);\n\n  if (!movies) {\n    return;\n  }\n\n  const { title, release_date, poster_path, overview, genres, vote_average } =\n    movies;\n\n  return (\n    <>\n      <StyledLink to={backLinkLocationRef.current}>go back</StyledLink>\n      {movies && (\n        <Container>\n          <img\n            width=\"300px\"\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'\n            }\n            alt={title}\n          />\n          <TextInfo>\n            <h1>\n              {title} ({release_date.slice(0, 4)})\n            </h1>\n            <p>User Score: {Math.round(vote_average * 10)}%</p>\n            <h2>Overview</h2>\n            <Overview>{overview}</Overview>\n            <h3>Genres</h3>\n            <ul>\n              {genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </ul>\n          </TextInfo>\n        </Container>\n      )}\n      {error && <p>{error}</p>}\n      {loading && <TailSpin color=\"green\" />}\n      <Title>Additional information</Title>\n      <ul>\n        <ListInfo>\n          <Link to=\"cast\">Cast</Link>\n        </ListInfo>\n        <ListInfo>\n          <Link to=\"reviews\">Reviews</Link>\n        </ListInfo>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","KEY","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","stop","apply","arguments","fetchSearchByQuery","_ref2","_callee2","query","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchCredits","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","Container","styled","_templateObject","_taggedTemplateLiteral","TextInfo","_templateObject2","Overview","_templateObject3","Title","_templateObject4","ListInfo","_templateObject5","StyledLink","NavLink","_templateObject6","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","location","useLocation","backLinkLocationRef","useRef","state","from","useParams","useEffect","fetchQuery","t0","message","title","release_date","poster_path","overview","genres","vote_average","_jsxs","_Fragment","children","_jsx","to","current","width","src","alt","slice","Math","round","map","genre","name","id","TailSpin","color","Link","Suspense","fallback","Outlet"],"sourceRoot":""}