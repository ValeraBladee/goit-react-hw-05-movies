{"version":3,"file":"static/js/76.f5c11985.chunk.js","mappings":"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","sources":["api.js","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = '60734cb7239d2e1b26d8feba8040402e';\n\nexport const getTrendingMovie = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const searchMovieByKeyword = async queryValue => {\n  const response = await axios.get(\n    `${BASE_URL}/3/search/movie?api_key=${API_KEY}&query=${queryValue}`\n  );\n  return response.data;\n};\n\nexport const searchMovieById = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getCasts = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ColorRing } from 'react-loader-spinner';\nimport { getCasts } from 'api';\nimport css from './Cast.module.css';\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function castOfMovie() {\n      setLoading(true);\n      setError(false);\n      try {\n        const response = await getCasts(movieId);\n        setCast(response.cast);\n      } catch {\n        setError(false);\n      } finally {\n        setLoading(false);\n      }\n    }\n    castOfMovie();\n  }, [movieId]);\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  return (\n    <>\n      {loading && (\n        <ColorRing\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      )}\n      {cast.length === 0 ? (\n        'There is no cast'\n      ) : (\n        <ul className={css.castList}>\n          {cast.map(({ id, profile_path, name, character }) => (\n            <li key={id} className={css.castItem}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                    : defaultImg\n                }\n                alt={name}\n                width={200}\n                height={300}\n              />\n              <h3>{name}</h3>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n\n      {error && <span>Something went wrong!</span>}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE_URL","API_KEY","getTrendingMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","data","stop","apply","arguments","searchMovieByKeyword","_ref2","_callee2","queryValue","_context2","_x","searchMovieById","_ref3","_callee3","movieId","_context3","_x2","getCasts","_ref4","_callee4","_context4","_x3","getReviews","_ref5","_callee5","_context5","_x4","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useParams","useEffect","_castOfMovie","t0","finish","castOfMovie","_jsxs","_Fragment","children","_jsx","ColorRing","visible","height","width","ariaLabel","wrapperClass","colors","length","className","css","map","id","profile_path","name","character","src","alt"],"sourceRoot":""}